@using Microsoft.AspNetCore.Identity;
@using StolovkyZilina.Util;
@inject SignInManager<IdentityUser> signInManager
@inject UserManager<IdentityUser> userManager
@model StolovkyZilina.Models.ViewModels.EventViewModel
@{
}

<div class="bg-secondary bg-opacity-10 mb-5 py-2">
	<div class="container">
		<h1>@Model.Name</h1>
	</div>
</div>

<div class="container my-5">
	<div class="row justify-content-center">
		<div class="col-12 col-lg-12">
			<div class="container mt-5 mb-5">
				<div class="d-flex justify-content-center row">
					<div class="col-lg-3">
						@if (Model.FeaturedImage != null)
						{
							<img src="data:image/png;base64,@Convert.ToBase64String(Model.FeaturedImage)" class="img-fluid" alt="@Model.Name">
						}
						else
						{
							<img src="~/Resources/Images/eventcalendar.jpeg" class="img-fluid" alt="@Model.Name">
						}
					</div>
					<div class="col-lg-6 mt-1">
						<h3>@Model.Name</h3>
						@if (!string.IsNullOrEmpty(Model.Description))
						{
							<p class="text-secondary">@Model.Description</p>
						}
					</div>
					<div class="justify-content-center col-lg-3 border-start mt-1 d-flex flex-column">
						<div class="mt-4">
							<dl class="row">
								<dt class="col-6">Dátum</dt>
								<dd class="col-6">@Model.Time.ToString("dd.MM.")</dd>
								<dt class="col-6">Čas</dt>
								<dd class="col-6">@Model.Time.ToString("HH:mm")</dd>
								<dt class="col-6">Miesto</dt>
								<dd class="col-6"><a href="@("https://www.google.com/maps?q="+Model.Location.City+","+Model.Location.Name)" target="_blank">@Model.Location.Name</a></dd>
							</dl>
							@foreach (var tag in Model.Tags)
							{
								<span class="badge bg-secondary me-1">
									@tag.DisplayName
								</span>
							}
						</div>
						@if (signInManager.IsSignedIn(User) && User.IsInRole("UserP1"))
						{
							<a class="btn btn-primary mt-auto" asp-controller="Events" asp-action="CreateGamePoll" asp-route-id="@Model.Id">
								Pridať hlasovanie
							</a>
						}
					</div>
				</div>
			</div>
		</div>
	</div>
</div>

@if (Model != null)
{
	@if (signInManager.IsSignedIn(User))
	{
		<div class="container mt-5 mb-5">
			@if (Model.Time < DateTime.Now)
			{
				<div class="w-75 mx-auto d-flex justify-content-between mb-5">
					@for (var i = 5; i > 0; i--)
					{
						<a id="@("btn_"+i)" class="btn btn-light position-relative m-2">
							<img src=@Constants.ImageLinks[i-1] width="20" />
							<span id="@("l_"+i)" class="position-absolute top-0 start-100 translate-middle badge rounded-pill bg-primary">
								@Model.TotalLikes[i-1]
								<span class="visually-hidden">Likes</span>
							</span>
						</a>
					}
				</div>
			}

			<div class="accordion" id="accordion">

				<div class="accordion-item">
					<h2 class="accordion-header">
						<button class="accordion-button @(Model.Time > DateTime.Now ? "" : "colapsed")" type="button" data-bs-toggle="collapse" data-bs-target="#panelsStayOpen-collapseTwo" aria-expanded="@(Model.Time > DateTime.Now ? "true" : "false")" aria-controls="panelsStayOpen-collapseTwo">
							Hlasovanie - Účasť
						</button>
					</h2>
					<div id="panelsStayOpen-collapseTwo" class="accordion-collapse collapse @(Model.Time > DateTime.Now ? "show" : "")">
						<div class="accordion-body">
							<div id="votes" class="row justify-content-center p-2">
								<div class="btn-group d-flex justify-content-center mt-2 text-center" role="group">
									@if (Model.Time > DateTime.Now)
									{
										<input type="radio" class="btn-check" id="btnradio3" name="ParticipationVote" asp-for="ParticipationVote" value="2" autocomplete="off">
										<label class="btn btn-outline-success" for="btnradio3">Prídem</label>

										<input type="radio" class="btn-check" id="btnradio2" name="ParticipationVote" asp-for="ParticipationVote" value="1" autocomplete="off">
										<label class="btn btn-outline-secondary" for="btnradio2">Ešte neviem</label>

										<input type="radio" class="btn-check" id="btnradio1" name="ParticipationVote" asp-for="ParticipationVote" value="0" autocomplete="off">
										<label class="btn btn-outline-danger" for="btnradio1">Neprídem</label>
									}
								</div>
								<div class="col-lg-4 text-center">
									@if (Model.ParticipationVotes.Any(p => p.VoteStatus == 2))
									{
										<h4 class="mt-5">Príde</h4>
										<ul class="list-group list-group-flush">
											@foreach (var p in Model.ParticipationVotes)
											{
												if (p.VoteStatus == 2)
												{
													<li class="list-group-item">@p.Alias</li>
												}
											}
										</ul>
									}
								</div>
								<div class="col-lg-4">
									@if (Model.ParticipationVotes.Any(p => p.VoteStatus == 1))
									{
										<h4 class="mt-5">Ešte nevie</h4>
										<ul class="list-group list-group-flush">
											@foreach (var p in Model.ParticipationVotes)
											{
												if (p.VoteStatus == 1)
												{
													<li class="list-group-item">@p.Alias</li>
												}
											}
										</ul>
									}
								</div>
								<div class="col-lg-4">
									@if (Model.ParticipationVotes.Any(p => p.VoteStatus == 0))
									{
										<h4 class="mt-5">Nepríde</h4>
										<ul class="list-group list-group-flush">
											@foreach (var p in Model.ParticipationVotes)
											{
												if (p.VoteStatus == 0)
												{
													<li class="list-group-item">@p.Alias</li>
												}
											}
										</ul>
									}
								</div>
							</div>
						</div>
					</div>
				</div>
				@if (Model.GamePolls.Any())
				{
					@foreach (var poll in Model.GamePolls)
					{
						<div class="accordion-item">
							<h2 class="accordion-header">
								<button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#panelsStayOpen-@poll.Id" aria-expanded="false" aria-controls="panelsStayOpen-@poll.Id">
									Hlasovanie - @poll.PollName
								</button>
							</h2>
							<div id="panelsStayOpen-@poll.Id" class="accordion-collapse collapse">
								<div class="accordion-body">
									@foreach (var game in poll.GamesInPoll)
									{
										<div class="card border-0">
											<div class="row g-0 shadow mb-3">
												<div class="col-md-2 d-flex align-items-start">
													@if (game.FeaturedImage != null)
													{
														<a asp-area="" asp-controller="Game" asp-action="Index" asp-route-urlHandle="@game.UrlHandle">
															<img src="data:image/png;base64,@Convert.ToBase64String(game.FeaturedImage)" class="img-fluid h-100" alt="@game.Name">
														</a>
													}
													else
													{
														<a asp-area="" asp-controller="Game" asp-action="Index" asp-route-urlHandle="@game.UrlHandle">
															<img src="~/Resources/Images/gameCover.jpeg" class="img-fluid" style="max-height: 175px; max-width: 175px" alt="@game.Name">
														</a>
													}
												</div>
												<div class="col-md-8 d-flex align-items-center justify-content-center">
													@foreach (var vote in poll.GameVotes)
													{
														@if (vote.GameId == game.Id)
														{
															<div class="item">
																@if (vote.User.FeaturedImage != null)
																{
																	<a asp-area=""
																	   asp-controller="Account"
																	   asp-action="Profile"
																	   asp-route-userName="@userManager.FindByIdAsync(vote.User.UserId.ToString()).Result.UserName">
																		<img alt="@vote.User.Name" title="@userManager.FindByIdAsync(vote.User.UserId.ToString()).Result.UserName" class="rounded-circle mx-2 my-2 shadow" width="55" src="data:image/png;base64,@Convert.ToBase64String(vote.User.FeaturedImage)">
																	</a>
																}
																else
																{
																	<a asp-area=""
																	   asp-controller="Account"
																	   asp-action="Profile"
																	   asp-route-userName="@userManager.FindByIdAsync(vote.User.UserId.ToString()).Result.UserName">
																		<img alt="@vote.User.Name" title="@userManager.FindByIdAsync(vote.User.UserId.ToString()).Result.UserName" class="rounded-circle mx-2 my-2 shadow" width="55" src="~/Resources/Images/meeple.jpeg">
																	</a>
																}
															</div>
														}
													}
												</div>
												<div class="col-md-2 d-flex align-items-center justify-content-center my-3">
													@if (signInManager.IsSignedIn(User))
													{
														@if (poll.GameVotes.Any(p => p.GamePollId == poll.Id && p.GameId == game.Id && p.UserId == Model.CurrentProfileId))
														{
															<a type="button" class="btn btn-outline-danger me-3"
															   asp-area=""
															   asp-controller="Events"
															   asp-action="VoteForGame"
															   asp-route-gameId="@game.Id"
															   asp-route-eventId="@Model.Id"
															   asp-route-gamePollId="@poll.Id">
																<i class="bi bi-x-circle"></i>
															</a>
														}
														else
														{
															@if (poll.GameVotes.Any() && poll.GameVotes.Where(p => p.GamePollId == poll.Id && p.UserId == Model.CurrentProfileId).Count() >= poll.NumberOfVotesPerUser)
															{
																<a type="button" class="btn btn-outline-secondary me-3 disabled"
																   asp-area=""
																   asp-controller="Events"
																   asp-action="VoteForGame"
																   asp-route-gameId="@game.Id"
																   asp-route-eventId="@Model.Id"
																   asp-route-gamePollId="@poll.Id">
																	<i class="bi bi-circle"></i>
																</a>
															}
															else
															{
																<a type="button" class="btn btn-outline-success me-3"
																   asp-area=""
																   asp-controller="Events"
																   asp-action="VoteForGame"
																   asp-route-gameId="@game.Id"
																   asp-route-eventId="@Model.Id"
																   asp-route-gamePollId="@poll.Id">
																	<i class="bi bi-check-circle"></i>
																</a>
															}

														}
													}
												</div>
											</div>
										</div>
									}
								</div>
							</div>
						</div>
					}
				}
				<div class="accordion-item">
					<h2 class="accordion-header">
						<button class="accordion-button" type="button" data-bs-toggle="collapse" data-bs-target="#panelsStayOpen-collapseOne" aria-expanded="true" aria-controls="panelsStayOpen-collapseOne">
							Komentáre (@Model.Comments.Count())
						</button>
					</h2>
					<div id="panelsStayOpen-collapseOne" class="accordion-collapse collapse show">
						<div class="accordion-body">
							<div class="card border-0">
								<div class="card-header bg-transparent border-bottom-0">
									@if (signInManager.IsSignedIn(User))
									{
										<form method="post">
											<div class="mb-3">
												<label for="exampleFormControlTextarea1" class="form-label">Nový komentár</label>
												<textarea class="form-control" rows="3" asp-for="CommentContent"></textarea>
											</div>
											<div class="mb-3">
												<button type="submit" class="btn btn-outline-primary">Zverejniť</button>
												<input type="hidden" asp-for="Id">
												<input type="hidden" asp-for="Name">
												<input type="hidden" asp-for="ContentId">
											</div>
										</form>
									}
								</div>
								@if (Model.Comments != null && Model.Comments.Any())
								{
									<div class="card-body">
										@foreach (var comment in Model.Comments)
										{
											<div class="card mb-3">
												<div class="card-body">
													<div>
														@comment.Content
													</div>
													<div class=" d-flex justify-content-between">
														<span class="text-secondary">@comment.UserName</span>
														<span class="text-secondary">@comment.DateAdded.ToShortDateString()</span>
													</div>
												</div>
											</div>
										}
									</div>
								}
							</div>
						</div>
					</div>
				</div>
			</div>
		</div>
	}
}


@section scripts {
	<script>
		$(document).ready(function () {
			$('input[name="ParticipationVote"]').change(function () {
				var eventId = '@Model.Id';
				var voteStatus = $('input[name="ParticipationVote"]:checked').val();
				$.ajax({
					url: '/Events/ParticipationVote',
					type: 'GET',
					data: { id: eventId, voteStatus: voteStatus },
					success: function (data) {
						location.reload();
						console.log(data);
					},
				});
			});
		});
	</script>

	<script>
		function setupButton(btnId, totalLikesId, rating) {
			const btnElement = document.getElementById(btnId);
			const totalLikes = document.getElementById(totalLikesId);

			async function getTotalLikes(forRating) {
				fetch('/api/BlogPostRating/@Model.ContentId/' + forRating + '/totalLikes', {
					method: 'GET',
					headers: {
						'Content-Type': 'application/json',
						'Accept': '*/*'
					}
				}).then(data => data.json()).then(result => document.getElementById('l_' + forRating).innerHTML = result);
			}

			async function addRating() {
				fetch('/api/BlogPostRating/Add', {
					method: 'POST',
					headers: {
						'Content-Type': 'application/json',
						'Accept': '*/*'
					},
					body: JSON.stringify({
						contentId: '@Model.ContentId',
						userId: '@userManager.GetUserId(User)',
						rating: rating
					})
				}).then(data => {
					getTotalLikes(rating);
					if (data.ok) {
						data.json().then(result => getTotalLikes(result)).then(() => getTotalLikes(rating));
					}
				});
			};

			btnElement.addEventListener('click', addRating);
		}

		setupButton('btn_5', 'l_5', '5');
		setupButton('btn_4', 'l_4', '4');
		setupButton('btn_3', 'l_3', '3');
		setupButton('btn_2', 'l_2', '2');
		setupButton('btn_1', 'l_1', '1');
	</script>
}
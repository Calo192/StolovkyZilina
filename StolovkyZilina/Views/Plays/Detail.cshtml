@using StolovkyZilina.Models.ViewModels;
@using Microsoft.AspNetCore.Identity
@using StolovkyZilina.Util;
@inject SignInManager<IdentityUser> signInManager
@inject UserManager<IdentityUser> userManager
@model StolovkyZilina.Models.ViewModels.PlayViewModel
@{
}

<div class="bg-secondary bg-opacity-10 py-2">
	<div class="container">
		<h1>Herna partia - @Model.GameName</h1>
	</div>
</div>


<div class="container rounded bg-white mt-5 mb-5">
	<div class="row">
		<div class="col-md-3 border-right">
			<div class="d-flex flex-column align-items-center text-center p-3 py-5">
				<h4 class="text-right">@Model.GameName</h4>

				@if (Model.GameFeaturedImage != null)
				{
					<a asp-area="" asp-controller="Game" asp-action="Index" asp-route-urlHandle="@Model.GameUrlHandle">
						<img src="data:image/png;base64,@Convert.ToBase64String(Model.GameFeaturedImage)" class="mt-4" width="200px">
					</a>
				}
				else
				{
					<img class="mt-2" width="200px" src="https://www.svgrepo.com/show/83116/board-games-set.svg">
				}
			</div>
		</div>
		<div class="col-md-5 border-right">
			<div class="p-3 py-5">
				<div class="d-flex justify-content-between align-items-center mb-3">
					<h4 class="text-right">Vysledky hracov</h4>
				</div>
				<dl class="row">
					<dt class="col-9">Hráč</dt>
					@if (Model.IsOnPointsGame)
					{
						<dd class="col-3">Skóre</dd>
					}
					else
					{
						<dd class="col-3">Víťaz</dd>
					}
					@foreach (var player in Model.Players)
					{
						<dt class="col-9">
							@if (player.IsGuest)
							{
								@player.UserName
							}
							else
							{
								<a asp-area="" asp-controller="Account" asp-action="Profile" asp-route-userName="@player.UserName">
									@player.UserName
								</a>
							}
							@if (!string.IsNullOrEmpty(player.Info))
							{
								<a> - @player.Info</a>
							}
						</dt>
						@if (Model.IsOnPointsGame)
						{
							<dd class="col-3">@player.Score</dd>
						}
						else
						{
							if (player.Score > 0)
							{
								<dd class="col-3"><i class="bi bi-check-circle-fill text-success"></i></dd>
							}
							else
							{
								<dd class="col-3"></dd>
							}
						}
					}
				</dl>
			</div>
		</div>

		<div class="col-md-4">
			<div class="p-3 py-5">
				<div class="d-flex justify-content-between align-items-center">
					<h4 class="text-right">Detaily partie</h4>
				</div><br>

				<dl class="row">
					<dt class="col-6">Stav</dt>
					@if (@Model.GetState() == GameState.Ukončená.ToString())
					{
						<dd class="col-6 text-success">@Model.GetState()</dd>
					}
					else if (@Model.GetState() == GameState.Rozohraná.ToString())
					{
						<dd class="col-6 text-warning">@Model.GetState()</dd>
					}
					else if (@Model.GetState() == GameState.Nedohraná.ToString())
					{
						<dd class="col-6 text-danger">@Model.GetState()</dd>
					}

					@if (Model.Location != null)
					{
						<dt class="col-6">Miesto</dt>
						<dd class="col-6">@Model.Location.Name</dd>
					}
					@if (Model.StartTime != null)
					{
						<dt class="col-6">Datum konania</dt>
						<dd class="col-6">@Model.StartTime?.ToShortDateString()</dd>
					}
					@if (Model.StartTime != null)
					{
						<dt class="col-6">Zaciatok</dt>
						<dd class="col-6">@Model.StartTime?.ToShortTimeString()</dd>
					}
					@if (Model.EndTime != null)
					{
						<dt class="col-6">Koniec</dt>
						<dd class="col-6">@Model.EndTime?.ToShortTimeString()</dd>
					}
					@if (Model.EndTime != null && Model.EndTime != default(DateTime))
					{
						<dt class="col-6">Trvanie</dt>
						<dd class="col-6">@($"{(int)(Model.EndTime - Model.StartTime)?.TotalHours}h{(Model.EndTime - Model.StartTime)?.Minutes}m")</dd>
					}
				</dl>
				@if (signInManager.IsSignedIn(User))
				{
					if (User.IsInRole("Admin") || (Model.Players.Any(p => p.UserName == User?.Identity?.Name)))
					{
						<div class="d-flex my-2">
							<a class="btn btn-primary" asp-area=""
							   asp-controller="Plays"
							   asp-action="Edit"
							   asp-route-id="@Model.Id">Upravit</a>
						</div>
					}
				}

			</div>
		</div>
		@if (!string.IsNullOrEmpty(Model.Desc))
		{
			<div class="d-flex justify-content-between align-items-center mb-3">
				@Model.Desc;
			</div>
		}
	</div>
</div>

@if (Model != null)
{
	@if (signInManager.IsSignedIn(User))
	{
		<div class="container mt-5 mb-5">
			<div class="w-75 mx-auto d-flex justify-content-between mb-5">
				@for (var i = 5; i > 0; i--)
				{
					<a id="@("btn_"+i)" class="btn btn-light position-relative m-2">
						<img src=@Constants.ImageLinks[i-1] width="20" />
						<span id="@("l_"+i)" class="position-absolute top-0 start-100 translate-middle badge rounded-pill bg-primary">
							@Model.TotalLikes[i-1]
							<span class="visually-hidden">Likes</span>
						</span>
					</a>
				}
			</div>
			<div class="accordion accordion-flush" id="accordionComments">
				<div class="accordion-item">
					<h2 class="accordion-header">
						<button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#flush-collapseOne" aria-expanded="false" aria-controls="flush-collapseOne">
							<h5>Komentáre (@Model.Comments.Count())</h5>
						</button>
					</h2>
					<div id="flush-collapseOne" class="accordion-collapse collapse" data-bs-parent="#accordionComments">
						<div class="card border-0">
							<div class="card-header bg-transparent border-bottom-0">
								@if (signInManager.IsSignedIn(User))
								{
									<form method="post">
										<div class="mb-3">
											<label for="exampleFormControlTextarea1" class="form-label">Nový komentár</label>
											<textarea class="form-control" rows="3" asp-for="CommentContent"></textarea>
										</div>
										<div class="mb-3">
											<button type="submit" class="btn btn-outline-primary">Zverejniť</button>
											<input type="hidden" asp-for="Id">
											<input type="hidden" asp-for="GameUrlHandle">
											<input type="hidden" asp-for="GameName">
											<input type="hidden" asp-for="ContentId">
										</div>
									</form>
								}
							</div>
							@if (Model.Comments != null && Model.Comments.Any())
							{
								<div class="card-body">
									@foreach (var comment in Model.Comments)
									{
										<div class="card mb-3">
											<div class="card-body">
												<div>
													@comment.Content
												</div>
												<div class=" d-flex justify-content-between">
													<span class="text-secondary">@comment.UserName</span>
													<span class="text-secondary">@comment.DateAdded.ToShortDateString()</span>
												</div>
											</div>
										</div>
									}
								</div>
							}
						</div>
					</div>
				</div>
			</div>

		</div>
	}
}





@section Scripts
	{
	<script>
		function setupButton(btnId, totalLikesId, rating) {
			const btnElement = document.getElementById(btnId);
			const totalLikes = document.getElementById(totalLikesId);

			async function getTotalLikes(forRating) {
				fetch('/api/BlogPostRating/@Model.ContentId/' + forRating + '/totalLikes', {
					method: 'GET',
					headers: {
						'Content-Type': 'application/json',
						'Accept': '*/*'
					}
				}).then(data => data.json()).then(result => document.getElementById('l_' + forRating).innerHTML = result);
			}

			async function addRating() {
				fetch('/api/BlogPostRating/Add', {
					method: 'POST',
					headers: {
						'Content-Type': 'application/json',
						'Accept': '*/*'
					},
					body: JSON.stringify({
						contentId: '@Model.ContentId',
						userId: '@userManager.GetUserId(User)',
						rating: rating
					})
				}).then(data => {
					getTotalLikes(rating);
					if (data.ok) {
						data.json().then(result => getTotalLikes(result)).then(() => getTotalLikes(rating));
					}
				});
			};

			btnElement.addEventListener('click', addRating);
		}

		setupButton('btn_5', 'l_5', '5');
		setupButton('btn_4', 'l_4', '4');
		setupButton('btn_3', 'l_3', '3');
		setupButton('btn_2', 'l_2', '2');
		setupButton('btn_1', 'l_1', '1');
	</script>
}